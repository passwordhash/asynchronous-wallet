services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: config.env
    ports:
      - "5782:8080"
    networks:
      - backend
    volumes:
      - ./configs:/app/configs
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 3
    environment:
        - POSTGRES_HOST=postgres
  postgres:
    image: postgres:15
    env_file: config.env
    ports:
      - "5432:5432"
    networks:
      - backend
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3
  migrate:
    image: migrate/migrate:4
    command: ["-path=/migrations", "-database=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable", "up"]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend
    volumes:
      - ./migrations/postgres:/migrations

networks:
  backend:

volumes:
  pg_data:
